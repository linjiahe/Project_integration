package com.blockchain.commune.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TeamCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table team
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table team
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table team
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public TeamCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table team
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("user_id like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("user_id not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andMemberAmountIsNull() {
            addCriterion("member_amount is null");
            return (Criteria) this;
        }

        public Criteria andMemberAmountIsNotNull() {
            addCriterion("member_amount is not null");
            return (Criteria) this;
        }

        public Criteria andMemberAmountEqualTo(Integer value) {
            addCriterion("member_amount =", value, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountNotEqualTo(Integer value) {
            addCriterion("member_amount <>", value, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountGreaterThan(Integer value) {
            addCriterion("member_amount >", value, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("member_amount >=", value, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountLessThan(Integer value) {
            addCriterion("member_amount <", value, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountLessThanOrEqualTo(Integer value) {
            addCriterion("member_amount <=", value, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountIn(List<Integer> values) {
            addCriterion("member_amount in", values, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountNotIn(List<Integer> values) {
            addCriterion("member_amount not in", values, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountBetween(Integer value1, Integer value2) {
            addCriterion("member_amount between", value1, value2, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("member_amount not between", value1, value2, "memberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountIsNull() {
            addCriterion("direct_member_amount is null");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountIsNotNull() {
            addCriterion("direct_member_amount is not null");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountEqualTo(Integer value) {
            addCriterion("direct_member_amount =", value, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountNotEqualTo(Integer value) {
            addCriterion("direct_member_amount <>", value, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountGreaterThan(Integer value) {
            addCriterion("direct_member_amount >", value, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("direct_member_amount >=", value, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountLessThan(Integer value) {
            addCriterion("direct_member_amount <", value, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountLessThanOrEqualTo(Integer value) {
            addCriterion("direct_member_amount <=", value, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountIn(List<Integer> values) {
            addCriterion("direct_member_amount in", values, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountNotIn(List<Integer> values) {
            addCriterion("direct_member_amount not in", values, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountBetween(Integer value1, Integer value2) {
            addCriterion("direct_member_amount between", value1, value2, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andDirectMemberAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("direct_member_amount not between", value1, value2, "directMemberAmount");
            return (Criteria) this;
        }

        public Criteria andMemberLevelIsNull() {
            addCriterion("member_level is null");
            return (Criteria) this;
        }

        public Criteria andMemberLevelIsNotNull() {
            addCriterion("member_level is not null");
            return (Criteria) this;
        }

        public Criteria andMemberLevelEqualTo(Integer value) {
            addCriterion("member_level =", value, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelNotEqualTo(Integer value) {
            addCriterion("member_level <>", value, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelGreaterThan(Integer value) {
            addCriterion("member_level >", value, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("member_level >=", value, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelLessThan(Integer value) {
            addCriterion("member_level <", value, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelLessThanOrEqualTo(Integer value) {
            addCriterion("member_level <=", value, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelIn(List<Integer> values) {
            addCriterion("member_level in", values, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelNotIn(List<Integer> values) {
            addCriterion("member_level not in", values, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelBetween(Integer value1, Integer value2) {
            addCriterion("member_level between", value1, value2, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andMemberLevelNotBetween(Integer value1, Integer value2) {
            addCriterion("member_level not between", value1, value2, "memberLevel");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountIsNull() {
            addCriterion("president_amount is null");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountIsNotNull() {
            addCriterion("president_amount is not null");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountEqualTo(Integer value) {
            addCriterion("president_amount =", value, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountNotEqualTo(Integer value) {
            addCriterion("president_amount <>", value, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountGreaterThan(Integer value) {
            addCriterion("president_amount >", value, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("president_amount >=", value, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountLessThan(Integer value) {
            addCriterion("president_amount <", value, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountLessThanOrEqualTo(Integer value) {
            addCriterion("president_amount <=", value, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountIn(List<Integer> values) {
            addCriterion("president_amount in", values, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountNotIn(List<Integer> values) {
            addCriterion("president_amount not in", values, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountBetween(Integer value1, Integer value2) {
            addCriterion("president_amount between", value1, value2, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andPresidentAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("president_amount not between", value1, value2, "presidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountIsNull() {
            addCriterion("direct_president_amount is null");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountIsNotNull() {
            addCriterion("direct_president_amount is not null");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountEqualTo(Integer value) {
            addCriterion("direct_president_amount =", value, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountNotEqualTo(Integer value) {
            addCriterion("direct_president_amount <>", value, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountGreaterThan(Integer value) {
            addCriterion("direct_president_amount >", value, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("direct_president_amount >=", value, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountLessThan(Integer value) {
            addCriterion("direct_president_amount <", value, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountLessThanOrEqualTo(Integer value) {
            addCriterion("direct_president_amount <=", value, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountIn(List<Integer> values) {
            addCriterion("direct_president_amount in", values, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountNotIn(List<Integer> values) {
            addCriterion("direct_president_amount not in", values, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountBetween(Integer value1, Integer value2) {
            addCriterion("direct_president_amount between", value1, value2, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andDirectPresidentAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("direct_president_amount not between", value1, value2, "directPresidentAmount");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table team
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table team
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}