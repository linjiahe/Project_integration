package com.blockchain.commune.mapper;

import com.blockchain.commune.model.Report;
import com.blockchain.commune.model.ReportCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ReportMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @SelectProvider(type=ReportSqlProvider.class, method="countByExample")
    long countByExample(ReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @DeleteProvider(type=ReportSqlProvider.class, method="deleteByExample")
    int deleteByExample(ReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @Delete({
        "delete from report",
        "where report_id = #{reportId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String reportId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @Insert({
        "insert into report (report_id, type_id, ",
        "type, type_context, ",
        "report_type, user_id, ",
        "create_time, status)",
        "values (#{reportId,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, ",
        "#{type,jdbcType=VARCHAR}, #{typeContext,jdbcType=VARCHAR}, ",
        "#{reportType,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT})"
    })
    int insert(Report record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @InsertProvider(type=ReportSqlProvider.class, method="insertSelective")
    int insertSelective(Report record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @SelectProvider(type=ReportSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="report_id", property="reportId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="type_id", property="typeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_context", property="typeContext", jdbcType=JdbcType.VARCHAR),
        @Result(column="report_type", property="reportType", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT)
    })
    List<Report> selectByExample(ReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "report_id, type_id, type, type_context, report_type, user_id, create_time, status",
        "from report",
        "where report_id = #{reportId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="report_id", property="reportId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="type_id", property="typeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_context", property="typeContext", jdbcType=JdbcType.VARCHAR),
        @Result(column="report_type", property="reportType", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT)
    })
    Report selectByPrimaryKey(String reportId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReportSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Report record, @Param("example") ReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReportSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Report record, @Param("example") ReportCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReportSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Report record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbg.generated
     */
    @Update({
        "update report",
        "set type_id = #{typeId,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=VARCHAR},",
          "type_context = #{typeContext,jdbcType=VARCHAR},",
          "report_type = #{reportType,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=TINYINT}",
        "where report_id = #{reportId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Report record);
}