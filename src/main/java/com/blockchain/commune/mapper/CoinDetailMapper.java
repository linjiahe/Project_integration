package com.blockchain.commune.mapper;

import com.blockchain.commune.model.CoinDetail;
import com.blockchain.commune.model.CoinDetailCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface CoinDetailMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @SelectProvider(type=CoinDetailSqlProvider.class, method="countByExample")
    long countByExample(CoinDetailCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @DeleteProvider(type=CoinDetailSqlProvider.class, method="deleteByExample")
    int deleteByExample(CoinDetailCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @Delete({
        "delete from coin_detail",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @Insert({
        "insert into coin_detail (id, coin_name, ",
        "currency_code, coin_introduction, ",
        "base_info_list, batch, ",
        "create_time)",
        "values (#{id,jdbcType=INTEGER}, #{coinName,jdbcType=VARCHAR}, ",
        "#{currencyCode,jdbcType=VARCHAR}, #{coinIntroduction,jdbcType=VARCHAR}, ",
        "#{baseInfoList,jdbcType=VARCHAR}, #{batch,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(CoinDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @InsertProvider(type=CoinDetailSqlProvider.class, method="insertSelective")
    int insertSelective(CoinDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @SelectProvider(type=CoinDetailSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="coin_name", property="coinName", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_code", property="currencyCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="coin_introduction", property="coinIntroduction", jdbcType=JdbcType.VARCHAR),
        @Result(column="base_info_list", property="baseInfoList", jdbcType=JdbcType.VARCHAR),
        @Result(column="batch", property="batch", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CoinDetail> selectByExample(CoinDetailCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, coin_name, currency_code, coin_introduction, base_info_list, batch, create_time",
        "from coin_detail",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="coin_name", property="coinName", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_code", property="currencyCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="coin_introduction", property="coinIntroduction", jdbcType=JdbcType.VARCHAR),
        @Result(column="base_info_list", property="baseInfoList", jdbcType=JdbcType.VARCHAR),
        @Result(column="batch", property="batch", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    CoinDetail selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CoinDetailSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CoinDetail record, @Param("example") CoinDetailCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CoinDetailSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CoinDetail record, @Param("example") CoinDetailCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CoinDetailSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CoinDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coin_detail
     *
     * @mbg.generated
     */
    @Update({
        "update coin_detail",
        "set coin_name = #{coinName,jdbcType=VARCHAR},",
          "currency_code = #{currencyCode,jdbcType=VARCHAR},",
          "coin_introduction = #{coinIntroduction,jdbcType=VARCHAR},",
          "base_info_list = #{baseInfoList,jdbcType=VARCHAR},",
          "batch = #{batch,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CoinDetail record);
}