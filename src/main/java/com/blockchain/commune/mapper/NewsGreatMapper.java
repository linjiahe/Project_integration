package com.blockchain.commune.mapper;

import com.blockchain.commune.model.NewsGreat;
import com.blockchain.commune.model.NewsGreatCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface NewsGreatMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @SelectProvider(type=NewsGreatSqlProvider.class, method="countByExample")
    long countByExample(NewsGreatCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @DeleteProvider(type=NewsGreatSqlProvider.class, method="deleteByExample")
    int deleteByExample(NewsGreatCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @Delete({
        "delete from news_great",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @Insert({
        "insert into news_great (id, news_id, ",
        "user_id, great, createtime, ",
        "updatetime)",
        "values (#{id,jdbcType=VARCHAR}, #{newsId,jdbcType=VARCHAR}, ",
        "#{userId,jdbcType=VARCHAR}, #{great,jdbcType=TINYINT}, #{createtime,jdbcType=TIMESTAMP}, ",
        "#{updatetime,jdbcType=TIMESTAMP})"
    })
    int insert(NewsGreat record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @InsertProvider(type=NewsGreatSqlProvider.class, method="insertSelective")
    int insertSelective(NewsGreat record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @SelectProvider(type=NewsGreatSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="news_id", property="newsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="great", property="great", jdbcType=JdbcType.TINYINT),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<NewsGreat> selectByExample(NewsGreatCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, news_id, user_id, great, createtime, updatetime",
        "from news_great",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="news_id", property="newsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="great", property="great", jdbcType=JdbcType.TINYINT),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP)
    })
    NewsGreat selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @UpdateProvider(type=NewsGreatSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") NewsGreat record, @Param("example") NewsGreatCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @UpdateProvider(type=NewsGreatSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") NewsGreat record, @Param("example") NewsGreatCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @UpdateProvider(type=NewsGreatSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(NewsGreat record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table news_great
     *
     * @mbg.generated
     */
    @Update({
        "update news_great",
        "set news_id = #{newsId,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "great = #{great,jdbcType=TINYINT},",
          "createtime = #{createtime,jdbcType=TIMESTAMP},",
          "updatetime = #{updatetime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(NewsGreat record);
}