package com.blockchain.commune.mapper;

import com.blockchain.commune.model.UserPrivate;
import com.blockchain.commune.model.UserPrivateCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserPrivateMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @SelectProvider(type=UserPrivateSqlProvider.class, method="countByExample")
    long countByExample(UserPrivateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @DeleteProvider(type=UserPrivateSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserPrivateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @Delete({
        "delete from user_private",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @Insert({
        "insert into user_private (user_id, payment_password, ",
        "update_time, create_time)",
        "values (#{userId,jdbcType=VARCHAR}, #{paymentPassword,jdbcType=VARCHAR}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(UserPrivate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @InsertProvider(type=UserPrivateSqlProvider.class, method="insertSelective")
    int insertSelective(UserPrivate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @SelectProvider(type=UserPrivateSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="payment_password", property="paymentPassword", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<UserPrivate> selectByExample(UserPrivateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "user_id, payment_password, update_time, create_time",
        "from user_private",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="payment_password", property="paymentPassword", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    UserPrivate selectByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UserPrivateSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserPrivate record, @Param("example") UserPrivateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UserPrivateSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserPrivate record, @Param("example") UserPrivateCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UserPrivateSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserPrivate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_private
     *
     * @mbg.generated
     */
    @Update({
        "update user_private",
        "set payment_password = #{paymentPassword,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(UserPrivate record);
}