package com.blockchain.commune.mapper;

import com.blockchain.commune.model.WalletAccount;
import com.blockchain.commune.model.WalletAccountCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface WalletAccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @SelectProvider(type=WalletAccountSqlProvider.class, method="countByExample")
    long countByExample(WalletAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @DeleteProvider(type=WalletAccountSqlProvider.class, method="deleteByExample")
    int deleteByExample(WalletAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @Delete({
        "delete from wallet_account",
        "where account_id = #{accountId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String accountId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @Insert({
        "insert into wallet_account (account_id, user_id, ",
        "user_name, account_status, ",
        "account_block_end_time, remark, ",
        "create_time, update_time)",
        "values (#{accountId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR}, ",
        "#{accountBlockEndTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(WalletAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @InsertProvider(type=WalletAccountSqlProvider.class, method="insertSelective")
    int insertSelective(WalletAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @SelectProvider(type=WalletAccountSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="account_id", property="accountId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_status", property="accountStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_block_end_time", property="accountBlockEndTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<WalletAccount> selectByExample(WalletAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "account_id, user_id, user_name, account_status, account_block_end_time, remark, ",
        "create_time, update_time",
        "from wallet_account",
        "where account_id = #{accountId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="account_id", property="accountId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_status", property="accountStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_block_end_time", property="accountBlockEndTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    WalletAccount selectByPrimaryKey(String accountId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WalletAccountSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") WalletAccount record, @Param("example") WalletAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WalletAccountSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") WalletAccount record, @Param("example") WalletAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WalletAccountSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(WalletAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wallet_account
     *
     * @mbg.generated
     */
    @Update({
        "update wallet_account",
        "set user_id = #{userId,jdbcType=VARCHAR},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "account_status = #{accountStatus,jdbcType=VARCHAR},",
          "account_block_end_time = #{accountBlockEndTime,jdbcType=TIMESTAMP},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where account_id = #{accountId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(WalletAccount record);
}