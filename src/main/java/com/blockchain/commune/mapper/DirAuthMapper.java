package com.blockchain.commune.mapper;

import com.blockchain.commune.model.DirAuth;
import com.blockchain.commune.model.DirAuthCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface DirAuthMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @SelectProvider(type=DirAuthSqlProvider.class, method="countByExample")
    long countByExample(DirAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @DeleteProvider(type=DirAuthSqlProvider.class, method="deleteByExample")
    int deleteByExample(DirAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @Delete({
        "delete from dir_auth",
        "where dir_name = #{dirName,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String dirName);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @Insert({
        "insert into dir_auth (dir_name, role_level)",
        "values (#{dirName,jdbcType=VARCHAR}, #{roleLevel,jdbcType=INTEGER})"
    })
    int insert(DirAuth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @InsertProvider(type=DirAuthSqlProvider.class, method="insertSelective")
    int insertSelective(DirAuth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @SelectProvider(type=DirAuthSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="dir_name", property="dirName", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="role_level", property="roleLevel", jdbcType=JdbcType.INTEGER)
    })
    List<DirAuth> selectByExample(DirAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "dir_name, role_level",
        "from dir_auth",
        "where dir_name = #{dirName,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="dir_name", property="dirName", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="role_level", property="roleLevel", jdbcType=JdbcType.INTEGER)
    })
    DirAuth selectByPrimaryKey(String dirName);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DirAuthSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") DirAuth record, @Param("example") DirAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DirAuthSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") DirAuth record, @Param("example") DirAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DirAuthSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(DirAuth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dir_auth
     *
     * @mbg.generated
     */
    @Update({
        "update dir_auth",
        "set role_level = #{roleLevel,jdbcType=INTEGER}",
        "where dir_name = #{dirName,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(DirAuth record);
}