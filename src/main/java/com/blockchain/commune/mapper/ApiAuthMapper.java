package com.blockchain.commune.mapper;

import com.blockchain.commune.model.ApiAuth;
import com.blockchain.commune.model.ApiAuthCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ApiAuthMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @SelectProvider(type=ApiAuthSqlProvider.class, method="countByExample")
    long countByExample(ApiAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @DeleteProvider(type=ApiAuthSqlProvider.class, method="deleteByExample")
    int deleteByExample(ApiAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @Delete({
        "delete from api_auth",
        "where url = #{url,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String url);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @Insert({
        "insert into api_auth (url, role_level)",
        "values (#{url,jdbcType=VARCHAR}, #{roleLevel,jdbcType=INTEGER})"
    })
    int insert(ApiAuth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @InsertProvider(type=ApiAuthSqlProvider.class, method="insertSelective")
    int insertSelective(ApiAuth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @SelectProvider(type=ApiAuthSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="role_level", property="roleLevel", jdbcType=JdbcType.INTEGER)
    })
    List<ApiAuth> selectByExample(ApiAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "url, role_level",
        "from api_auth",
        "where url = #{url,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="role_level", property="roleLevel", jdbcType=JdbcType.INTEGER)
    })
    ApiAuth selectByPrimaryKey(String url);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ApiAuthSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ApiAuth record, @Param("example") ApiAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ApiAuthSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ApiAuth record, @Param("example") ApiAuthCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ApiAuthSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ApiAuth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api_auth
     *
     * @mbg.generated
     */
    @Update({
        "update api_auth",
        "set role_level = #{roleLevel,jdbcType=INTEGER}",
        "where url = #{url,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(ApiAuth record);
}