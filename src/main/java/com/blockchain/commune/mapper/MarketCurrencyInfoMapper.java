package com.blockchain.commune.mapper;

import com.blockchain.commune.model.MarketCurrencyInfo;
import com.blockchain.commune.model.MarketCurrencyInfoCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface MarketCurrencyInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=MarketCurrencyInfoSqlProvider.class, method="countByExample")
    long countByExample(MarketCurrencyInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @DeleteProvider(type=MarketCurrencyInfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(MarketCurrencyInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @Delete({
        "delete from market_currency_info",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @Insert({
        "insert into market_currency_info (id, coin_name, ",
        "coin_img, currency_code, ",
        "market_cap, price, ",
        "turnover, volume, ",
        "changepercent, k_line, ",
        "crawl_status, batch, ",
        "create_time, update_time)",
        "values (#{id,jdbcType=VARCHAR}, #{coinName,jdbcType=VARCHAR}, ",
        "#{coinImg,jdbcType=VARCHAR}, #{currencyCode,jdbcType=VARCHAR}, ",
        "#{marketCap,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, ",
        "#{turnover,jdbcType=VARCHAR}, #{volume,jdbcType=VARCHAR}, ",
        "#{changepercent,jdbcType=VARCHAR}, #{kLine,jdbcType=VARCHAR}, ",
        "#{crawlStatus,jdbcType=VARCHAR}, #{batch,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(MarketCurrencyInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @InsertProvider(type=MarketCurrencyInfoSqlProvider.class, method="insertSelective")
    int insertSelective(MarketCurrencyInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=MarketCurrencyInfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="coin_name", property="coinName", jdbcType=JdbcType.VARCHAR),
        @Result(column="coin_img", property="coinImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_code", property="currencyCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_cap", property="marketCap", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="turnover", property="turnover", jdbcType=JdbcType.VARCHAR),
        @Result(column="volume", property="volume", jdbcType=JdbcType.VARCHAR),
        @Result(column="changepercent", property="changepercent", jdbcType=JdbcType.VARCHAR),
        @Result(column="k_line", property="kLine", jdbcType=JdbcType.VARCHAR),
        @Result(column="crawl_status", property="crawlStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="batch", property="batch", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<MarketCurrencyInfo> selectByExample(MarketCurrencyInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, coin_name, coin_img, currency_code, market_cap, price, turnover, volume, ",
        "changepercent, k_line, crawl_status, batch, create_time, update_time",
        "from market_currency_info",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="coin_name", property="coinName", jdbcType=JdbcType.VARCHAR),
        @Result(column="coin_img", property="coinImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_code", property="currencyCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_cap", property="marketCap", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="turnover", property="turnover", jdbcType=JdbcType.VARCHAR),
        @Result(column="volume", property="volume", jdbcType=JdbcType.VARCHAR),
        @Result(column="changepercent", property="changepercent", jdbcType=JdbcType.VARCHAR),
        @Result(column="k_line", property="kLine", jdbcType=JdbcType.VARCHAR),
        @Result(column="crawl_status", property="crawlStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="batch", property="batch", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    MarketCurrencyInfo selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketCurrencyInfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") MarketCurrencyInfo record, @Param("example") MarketCurrencyInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketCurrencyInfoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") MarketCurrencyInfo record, @Param("example") MarketCurrencyInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketCurrencyInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MarketCurrencyInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_currency_info
     *
     * @mbg.generated
     */
    @Update({
        "update market_currency_info",
        "set coin_name = #{coinName,jdbcType=VARCHAR},",
          "coin_img = #{coinImg,jdbcType=VARCHAR},",
          "currency_code = #{currencyCode,jdbcType=VARCHAR},",
          "market_cap = #{marketCap,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=VARCHAR},",
          "turnover = #{turnover,jdbcType=VARCHAR},",
          "volume = #{volume,jdbcType=VARCHAR},",
          "changepercent = #{changepercent,jdbcType=VARCHAR},",
          "k_line = #{kLine,jdbcType=VARCHAR},",
          "crawl_status = #{crawlStatus,jdbcType=VARCHAR},",
          "batch = #{batch,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(MarketCurrencyInfo record);
}