package com.blockchain.commune.mapper;

import com.blockchain.commune.model.MerchantUser;
import com.blockchain.commune.model.MerchantUserCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface MerchantUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @SelectProvider(type=MerchantUserSqlProvider.class, method="countByExample")
    long countByExample(MerchantUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @DeleteProvider(type=MerchantUserSqlProvider.class, method="deleteByExample")
    int deleteByExample(MerchantUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @Delete({
        "delete from merchant_user",
        "where merchant_user_id = #{merchantUserId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String merchantUserId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @Insert({
        "insert into merchant_user (merchant_user_id, login_name, ",
        "password, role_id, ",
        "nick_name, create_time, ",
        "update_time)",
        "values (#{merchantUserId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, ",
        "#{nickName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(MerchantUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @InsertProvider(type=MerchantUserSqlProvider.class, method="insertSelective")
    int insertSelective(MerchantUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @SelectProvider(type=MerchantUserSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="merchant_user_id", property="merchantUserId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="role_id", property="roleId", jdbcType=JdbcType.VARCHAR),
        @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<MerchantUser> selectByExample(MerchantUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "merchant_user_id, login_name, password, role_id, nick_name, create_time, update_time",
        "from merchant_user",
        "where merchant_user_id = #{merchantUserId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="merchant_user_id", property="merchantUserId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="role_id", property="roleId", jdbcType=JdbcType.VARCHAR),
        @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    MerchantUser selectByPrimaryKey(String merchantUserId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MerchantUserSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") MerchantUser record, @Param("example") MerchantUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MerchantUserSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") MerchantUser record, @Param("example") MerchantUserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MerchantUserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MerchantUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_user
     *
     * @mbg.generated
     */
    @Update({
        "update merchant_user",
        "set login_name = #{loginName,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "role_id = #{roleId,jdbcType=VARCHAR},",
          "nick_name = #{nickName,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where merchant_user_id = #{merchantUserId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(MerchantUser record);
}