package com.blockchain.commune.mapper;

import com.blockchain.commune.model.MarketTradeOnSpider;
import com.blockchain.commune.model.MarketTradeOnCriteria;
import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface MarketTradeOnMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @SelectProvider(type=MarketTradeOnSqlProvider.class, method="countByExample")
    long countByExample(MarketTradeOnCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @DeleteProvider(type=MarketTradeOnSqlProvider.class, method="deleteByExample")
    int deleteByExample(MarketTradeOnCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @Delete({
        "delete from market_trade_on",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @Insert({
        "insert into market_trade_on (id, symbol, ",
        "market_id, market_name, ",
        "pair, price_display, ",
        "hr_price_display, percent_change_display, ",
        "market_alias, create_time, ",
        "logo, price)",
        "values (#{id,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, ",
        "#{marketId,jdbcType=VARCHAR}, #{marketName,jdbcType=VARCHAR}, ",
        "#{pair,jdbcType=VARCHAR}, #{priceDisplay,jdbcType=VARCHAR}, ",
        "#{hrPriceDisplay,jdbcType=VARCHAR}, #{percentChangeDisplay,jdbcType=DECIMAL}, ",
        "#{marketAlias,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{logo,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL})"
    })
    int insert(MarketTradeOnSpider record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @InsertProvider(type=MarketTradeOnSqlProvider.class, method="insertSelective")
    int insertSelective(MarketTradeOnSpider record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @SelectProvider(type=MarketTradeOnSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_id", property="marketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_name", property="marketName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pair", property="pair", jdbcType=JdbcType.VARCHAR),
        @Result(column="price_display", property="priceDisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="hr_price_display", property="hrPriceDisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="percent_change_display", property="percentChangeDisplay", jdbcType=JdbcType.DECIMAL),
        @Result(column="market_alias", property="marketAlias", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="logo", property="logo", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DECIMAL)
    })
    List<MarketTradeOnSpider> selectByExample(MarketTradeOnCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, symbol, market_id, market_name, pair, price_display, hr_price_display, percent_change_display, ",
        "market_alias, create_time, logo, price",
        "from market_trade_on",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_id", property="marketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_name", property="marketName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pair", property="pair", jdbcType=JdbcType.VARCHAR),
        @Result(column="price_display", property="priceDisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="hr_price_display", property="hrPriceDisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="percent_change_display", property="percentChangeDisplay", jdbcType=JdbcType.DECIMAL),
        @Result(column="market_alias", property="marketAlias", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="logo", property="logo", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DECIMAL)
    })
    MarketTradeOnSpider selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketTradeOnSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") MarketTradeOnSpider record, @Param("example") MarketTradeOnCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketTradeOnSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") MarketTradeOnSpider record, @Param("example") MarketTradeOnCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketTradeOnSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MarketTradeOnSpider record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_trade_on
     *
     * @mbg.generated
     */
    @Update({
        "update market_trade_on",
        "set symbol = #{symbol,jdbcType=VARCHAR},",
          "market_id = #{marketId,jdbcType=VARCHAR},",
          "market_name = #{marketName,jdbcType=VARCHAR},",
          "pair = #{pair,jdbcType=VARCHAR},",
          "price_display = #{priceDisplay,jdbcType=VARCHAR},",
          "hr_price_display = #{hrPriceDisplay,jdbcType=VARCHAR},",
          "percent_change_display = #{percentChangeDisplay,jdbcType=DECIMAL},",
          "market_alias = #{marketAlias,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "logo = #{logo,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=DECIMAL}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(MarketTradeOnSpider record);
}