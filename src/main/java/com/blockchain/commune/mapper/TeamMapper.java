package com.blockchain.commune.mapper;

import com.blockchain.commune.model.Team;
import com.blockchain.commune.model.TeamCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TeamMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @SelectProvider(type=TeamSqlProvider.class, method="countByExample")
    long countByExample(TeamCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TeamSqlProvider.class, method="deleteByExample")
    int deleteByExample(TeamCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @Delete({
        "delete from team",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @Insert({
        "insert into team (user_id, member_amount, ",
        "direct_member_amount, member_level, ",
        "president_amount, direct_president_amount, ",
        "create_time, update_time)",
        "values (#{userId,jdbcType=VARCHAR}, #{memberAmount,jdbcType=INTEGER}, ",
        "#{directMemberAmount,jdbcType=INTEGER}, #{memberLevel,jdbcType=INTEGER}, ",
        "#{presidentAmount,jdbcType=INTEGER}, #{directPresidentAmount,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(Team record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @InsertProvider(type=TeamSqlProvider.class, method="insertSelective")
    int insertSelective(Team record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @SelectProvider(type=TeamSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="member_amount", property="memberAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="direct_member_amount", property="directMemberAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="member_level", property="memberLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="president_amount", property="presidentAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="direct_president_amount", property="directPresidentAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Team> selectByExample(TeamCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "user_id, member_amount, direct_member_amount, member_level, president_amount, ",
        "direct_president_amount, create_time, update_time",
        "from team",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="member_amount", property="memberAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="direct_member_amount", property="directMemberAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="member_level", property="memberLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="president_amount", property="presidentAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="direct_president_amount", property="directPresidentAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    Team selectByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TeamSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Team record, @Param("example") TeamCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TeamSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Team record, @Param("example") TeamCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TeamSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Team record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table team
     *
     * @mbg.generated
     */
    @Update({
        "update team",
        "set member_amount = #{memberAmount,jdbcType=INTEGER},",
          "direct_member_amount = #{directMemberAmount,jdbcType=INTEGER},",
          "member_level = #{memberLevel,jdbcType=INTEGER},",
          "president_amount = #{presidentAmount,jdbcType=INTEGER},",
          "direct_president_amount = #{directPresidentAmount,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Team record);
}