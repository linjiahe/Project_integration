package com.blockchain.commune.mapper;

import com.blockchain.commune.model.ReadRecord;
import com.blockchain.commune.model.ReadRecordCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ReadRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @SelectProvider(type=ReadRecordSqlProvider.class, method="countByExample")
    long countByExample(ReadRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @DeleteProvider(type=ReadRecordSqlProvider.class, method="deleteByExample")
    int deleteByExample(ReadRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @Delete({
        "delete from read_record",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @Insert({
        "insert into read_record (id, user_id, ",
        "user_name, post_Id, ",
        "title, score, score_status, ",
        "verify_status, create_time, ",
        "update_time)",
        "values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{postId,jdbcType=VARCHAR}, ",
        "#{title,jdbcType=VARCHAR}, #{score,jdbcType=DECIMAL}, #{scoreStatus,jdbcType=TINYINT}, ",
        "#{verifyStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(ReadRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @InsertProvider(type=ReadRecordSqlProvider.class, method="insertSelective")
    int insertSelective(ReadRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @SelectProvider(type=ReadRecordSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="post_Id", property="postId", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="score", property="score", jdbcType=JdbcType.DECIMAL),
        @Result(column="score_status", property="scoreStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="verify_status", property="verifyStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<ReadRecord> selectByExample(ReadRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, user_id, user_name, post_Id, title, score, score_status, verify_status, ",
        "create_time, update_time",
        "from read_record",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="post_Id", property="postId", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="score", property="score", jdbcType=JdbcType.DECIMAL),
        @Result(column="score_status", property="scoreStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="verify_status", property="verifyStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    ReadRecord selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReadRecordSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ReadRecord record, @Param("example") ReadRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReadRecordSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ReadRecord record, @Param("example") ReadRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ReadRecordSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ReadRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table read_record
     *
     * @mbg.generated
     */
    @Update({
        "update read_record",
        "set user_id = #{userId,jdbcType=VARCHAR},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "post_Id = #{postId,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "score = #{score,jdbcType=DECIMAL},",
          "score_status = #{scoreStatus,jdbcType=TINYINT},",
          "verify_status = #{verifyStatus,jdbcType=TINYINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(ReadRecord record);
}