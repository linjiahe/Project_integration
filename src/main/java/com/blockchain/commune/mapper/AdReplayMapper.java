package com.blockchain.commune.mapper;

import com.blockchain.commune.model.AdReplay;
import com.blockchain.commune.model.AdReplayCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface AdReplayMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @SelectProvider(type=AdReplaySqlProvider.class, method="countByExample")
    long countByExample(AdReplayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @DeleteProvider(type=AdReplaySqlProvider.class, method="deleteByExample")
    int deleteByExample(AdReplayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @Delete({
        "delete from ad_replay",
        "where replay_id = #{replayId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String replayId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @Insert({
        "insert into ad_replay (replay_id, ad_id, ",
        "user_id, NAME, replay_context, ",
        "re_user_id, re_name, ",
        "create_time, user_icon)",
        "values (#{replayId,jdbcType=VARCHAR}, #{adId,jdbcType=VARCHAR}, ",
        "#{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{replayContext,jdbcType=VARCHAR}, ",
        "#{reUserId,jdbcType=VARCHAR}, #{reName,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{userIcon,jdbcType=VARCHAR})"
    })
    int insert(AdReplay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @InsertProvider(type=AdReplaySqlProvider.class, method="insertSelective")
    int insertSelective(AdReplay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @SelectProvider(type=AdReplaySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="replay_id", property="replayId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="ad_id", property="adId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="replay_context", property="replayContext", jdbcType=JdbcType.VARCHAR),
        @Result(column="re_user_id", property="reUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="re_name", property="reName", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_icon", property="userIcon", jdbcType=JdbcType.VARCHAR)
    })
    List<AdReplay> selectByExample(AdReplayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "replay_id, ad_id, user_id, NAME, replay_context, re_user_id, re_name, create_time, ",
        "user_icon",
        "from ad_replay",
        "where replay_id = #{replayId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="replay_id", property="replayId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="ad_id", property="adId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="replay_context", property="replayContext", jdbcType=JdbcType.VARCHAR),
        @Result(column="re_user_id", property="reUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="re_name", property="reName", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_icon", property="userIcon", jdbcType=JdbcType.VARCHAR)
    })
    AdReplay selectByPrimaryKey(String replayId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AdReplaySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") AdReplay record, @Param("example") AdReplayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AdReplaySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") AdReplay record, @Param("example") AdReplayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AdReplaySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AdReplay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ad_replay
     *
     * @mbg.generated
     */
    @Update({
        "update ad_replay",
        "set ad_id = #{adId,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "NAME = #{name,jdbcType=VARCHAR},",
          "replay_context = #{replayContext,jdbcType=VARCHAR},",
          "re_user_id = #{reUserId,jdbcType=VARCHAR},",
          "re_name = #{reName,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "user_icon = #{userIcon,jdbcType=VARCHAR}",
        "where replay_id = #{replayId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(AdReplay record);
}