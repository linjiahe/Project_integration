package com.blockchain.commune.mapper;

import com.blockchain.commune.model.UserAccessRecord;
import com.blockchain.commune.model.UserAccessRecordCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserAccessRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @SelectProvider(type=UserAccessRecordSqlProvider.class, method="countByExample")
    long countByExample(UserAccessRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @DeleteProvider(type=UserAccessRecordSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserAccessRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @Delete({
        "delete from user_access_record",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @Insert({
        "insert into user_access_record (id, user_id, ",
        "ip, client_id, access_type, ",
        "create_time, client_type, ",
        "access_time)",
        "values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{ip,jdbcType=VARCHAR}, #{clientId,jdbcType=VARCHAR}, #{accessType,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{clientType,jdbcType=VARCHAR}, ",
        "#{accessTime,jdbcType=DATE})"
    })
    int insert(UserAccessRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @InsertProvider(type=UserAccessRecordSqlProvider.class, method="insertSelective")
    int insertSelective(UserAccessRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @SelectProvider(type=UserAccessRecordSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_id", property="clientId", jdbcType=JdbcType.VARCHAR),
        @Result(column="access_type", property="accessType", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="client_type", property="clientType", jdbcType=JdbcType.VARCHAR),
        @Result(column="access_time", property="accessTime", jdbcType=JdbcType.DATE)
    })
    List<UserAccessRecord> selectByExample(UserAccessRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, user_id, ip, client_id, access_type, create_time, client_type, access_time",
        "from user_access_record",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_id", property="clientId", jdbcType=JdbcType.VARCHAR),
        @Result(column="access_type", property="accessType", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="client_type", property="clientType", jdbcType=JdbcType.VARCHAR),
        @Result(column="access_time", property="accessTime", jdbcType=JdbcType.DATE)
    })
    UserAccessRecord selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UserAccessRecordSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserAccessRecord record, @Param("example") UserAccessRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UserAccessRecordSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserAccessRecord record, @Param("example") UserAccessRecordCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UserAccessRecordSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserAccessRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_access_record
     *
     * @mbg.generated
     */
    @Update({
        "update user_access_record",
        "set user_id = #{userId,jdbcType=VARCHAR},",
          "ip = #{ip,jdbcType=VARCHAR},",
          "client_id = #{clientId,jdbcType=VARCHAR},",
          "access_type = #{accessType,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "client_type = #{clientType,jdbcType=VARCHAR},",
          "access_time = #{accessTime,jdbcType=DATE}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(UserAccessRecord record);
}