package com.blockchain.commune.mapper;

import com.blockchain.commune.model.MarketBasicInfo;
import com.blockchain.commune.model.MarketBasicInfoCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface MarketBasicInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=MarketBasicInfoSqlProvider.class, method="countByExample")
    long countByExample(MarketBasicInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @DeleteProvider(type=MarketBasicInfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(MarketBasicInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @Delete({
        "delete from market_basic_info",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @Insert({
        "insert into market_basic_info (id, logo, ",
        "exchange, price, ",
        "percent, conver_coin, ",
        "conver_btc, title, ",
        "amount_24h, volume_24h, ",
        "tradedvalue, global_market, ",
        "createtime, kline_link, ",
        "currency_on_market_id, market_id, ",
        "market_name, symbol, ",
        "anchor, select_status, ",
        "context)",
        "values (#{id,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, ",
        "#{exchange,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, ",
        "#{percent,jdbcType=VARCHAR}, #{converCoin,jdbcType=VARCHAR}, ",
        "#{converBtc,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, ",
        "#{amount24h,jdbcType=VARCHAR}, #{volume24h,jdbcType=VARCHAR}, ",
        "#{tradedvalue,jdbcType=VARCHAR}, #{globalMarket,jdbcType=VARCHAR}, ",
        "#{createtime,jdbcType=TIMESTAMP}, #{klineLink,jdbcType=VARCHAR}, ",
        "#{currencyOnMarketId,jdbcType=VARCHAR}, #{marketId,jdbcType=VARCHAR}, ",
        "#{marketName,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, ",
        "#{anchor,jdbcType=VARCHAR}, #{selectStatus,jdbcType=TINYINT}, ",
        "#{context,jdbcType=LONGVARCHAR})"
    })
    int insert(MarketBasicInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @InsertProvider(type=MarketBasicInfoSqlProvider.class, method="insertSelective")
    int insertSelective(MarketBasicInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=MarketBasicInfoSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="logo", property="logo", jdbcType=JdbcType.VARCHAR),
        @Result(column="exchange", property="exchange", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="percent", property="percent", jdbcType=JdbcType.VARCHAR),
        @Result(column="conver_coin", property="converCoin", jdbcType=JdbcType.VARCHAR),
        @Result(column="conver_btc", property="converBtc", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount_24h", property="amount24h", jdbcType=JdbcType.VARCHAR),
        @Result(column="volume_24h", property="volume24h", jdbcType=JdbcType.VARCHAR),
        @Result(column="tradedvalue", property="tradedvalue", jdbcType=JdbcType.VARCHAR),
        @Result(column="global_market", property="globalMarket", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="kline_link", property="klineLink", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_on_market_id", property="currencyOnMarketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_id", property="marketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_name", property="marketName", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="anchor", property="anchor", jdbcType=JdbcType.VARCHAR),
        @Result(column="select_status", property="selectStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="context", property="context", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<MarketBasicInfo> selectByExampleWithBLOBs(MarketBasicInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @SelectProvider(type=MarketBasicInfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="logo", property="logo", jdbcType=JdbcType.VARCHAR),
        @Result(column="exchange", property="exchange", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="percent", property="percent", jdbcType=JdbcType.VARCHAR),
        @Result(column="conver_coin", property="converCoin", jdbcType=JdbcType.VARCHAR),
        @Result(column="conver_btc", property="converBtc", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount_24h", property="amount24h", jdbcType=JdbcType.VARCHAR),
        @Result(column="volume_24h", property="volume24h", jdbcType=JdbcType.VARCHAR),
        @Result(column="tradedvalue", property="tradedvalue", jdbcType=JdbcType.VARCHAR),
        @Result(column="global_market", property="globalMarket", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="kline_link", property="klineLink", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_on_market_id", property="currencyOnMarketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_id", property="marketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_name", property="marketName", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="anchor", property="anchor", jdbcType=JdbcType.VARCHAR),
        @Result(column="select_status", property="selectStatus", jdbcType=JdbcType.TINYINT)
    })
    List<MarketBasicInfo> selectByExample(MarketBasicInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, logo, exchange, price, percent, conver_coin, conver_btc, title, amount_24h, ",
        "volume_24h, tradedvalue, global_market, createtime, kline_link, currency_on_market_id, ",
        "market_id, market_name, symbol, anchor, select_status, context",
        "from market_basic_info",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="logo", property="logo", jdbcType=JdbcType.VARCHAR),
        @Result(column="exchange", property="exchange", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="percent", property="percent", jdbcType=JdbcType.VARCHAR),
        @Result(column="conver_coin", property="converCoin", jdbcType=JdbcType.VARCHAR),
        @Result(column="conver_btc", property="converBtc", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount_24h", property="amount24h", jdbcType=JdbcType.VARCHAR),
        @Result(column="volume_24h", property="volume24h", jdbcType=JdbcType.VARCHAR),
        @Result(column="tradedvalue", property="tradedvalue", jdbcType=JdbcType.VARCHAR),
        @Result(column="global_market", property="globalMarket", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="kline_link", property="klineLink", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_on_market_id", property="currencyOnMarketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_id", property="marketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_name", property="marketName", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="anchor", property="anchor", jdbcType=JdbcType.VARCHAR),
        @Result(column="select_status", property="selectStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="context", property="context", jdbcType=JdbcType.LONGVARCHAR)
    })
    MarketBasicInfo selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketBasicInfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") MarketBasicInfo record, @Param("example") MarketBasicInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketBasicInfoSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") MarketBasicInfo record, @Param("example") MarketBasicInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketBasicInfoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") MarketBasicInfo record, @Param("example") MarketBasicInfoCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @UpdateProvider(type=MarketBasicInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MarketBasicInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @Update({
        "update market_basic_info",
        "set logo = #{logo,jdbcType=VARCHAR},",
          "exchange = #{exchange,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=VARCHAR},",
          "percent = #{percent,jdbcType=VARCHAR},",
          "conver_coin = #{converCoin,jdbcType=VARCHAR},",
          "conver_btc = #{converBtc,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "amount_24h = #{amount24h,jdbcType=VARCHAR},",
          "volume_24h = #{volume24h,jdbcType=VARCHAR},",
          "tradedvalue = #{tradedvalue,jdbcType=VARCHAR},",
          "global_market = #{globalMarket,jdbcType=VARCHAR},",
          "createtime = #{createtime,jdbcType=TIMESTAMP},",
          "kline_link = #{klineLink,jdbcType=VARCHAR},",
          "currency_on_market_id = #{currencyOnMarketId,jdbcType=VARCHAR},",
          "market_id = #{marketId,jdbcType=VARCHAR},",
          "market_name = #{marketName,jdbcType=VARCHAR},",
          "symbol = #{symbol,jdbcType=VARCHAR},",
          "anchor = #{anchor,jdbcType=VARCHAR},",
          "select_status = #{selectStatus,jdbcType=TINYINT},",
          "context = #{context,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(MarketBasicInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table market_basic_info
     *
     * @mbg.generated
     */
    @Update({
        "update market_basic_info",
        "set logo = #{logo,jdbcType=VARCHAR},",
          "exchange = #{exchange,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=VARCHAR},",
          "percent = #{percent,jdbcType=VARCHAR},",
          "conver_coin = #{converCoin,jdbcType=VARCHAR},",
          "conver_btc = #{converBtc,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "amount_24h = #{amount24h,jdbcType=VARCHAR},",
          "volume_24h = #{volume24h,jdbcType=VARCHAR},",
          "tradedvalue = #{tradedvalue,jdbcType=VARCHAR},",
          "global_market = #{globalMarket,jdbcType=VARCHAR},",
          "createtime = #{createtime,jdbcType=TIMESTAMP},",
          "kline_link = #{klineLink,jdbcType=VARCHAR},",
          "currency_on_market_id = #{currencyOnMarketId,jdbcType=VARCHAR},",
          "market_id = #{marketId,jdbcType=VARCHAR},",
          "market_name = #{marketName,jdbcType=VARCHAR},",
          "symbol = #{symbol,jdbcType=VARCHAR},",
          "anchor = #{anchor,jdbcType=VARCHAR},",
          "select_status = #{selectStatus,jdbcType=TINYINT}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(MarketBasicInfo record);
}